{"ast":null,"code":"import _defineProperty from \"/Users/johntraut/code/clicky/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/johntraut/code/clicky/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Card from './components/ColorCard';\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: cards,\n      score: 0,\n      clicked: []\n    };\n\n    this.fakeClicks = () => {\n      this.setState({\n        clicked: this.state.clicked + 1\n      });\n    };\n\n    this.handleOnClick = id => {\n      let clickedArray = this.state.clicked;\n      console.log('inside click handle', id); //if the id of image just clicked on is in the clicked array, minus one off of score and then empty clicked array\n\n      if (clickedArray.indexOf(id) > -1) {\n        this.setState({\n          clickedArray: [],\n          score: 0\n        });\n        console.log(\"Score is down one\", this.state.score);\n      } else {\n        let newState = _objectSpread({}, this.state);\n\n        newState.score++;\n        this.setState(newState);\n        console.log(\"Score is up one\", this.state.score);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.cards.map(card => React.createElement(Card, {\n      key: card.id,\n      onClick: () => this.handleOnClick(card.id),\n      id: card.id,\n      image: card.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/johntraut/code/clicky/src/App.js"],"names":["React","Component","Card","cards","App","state","score","clicked","fakeClicks","setState","handleOnClick","id","clickedArray","console","log","indexOf","newState","render","map","card","image"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACNF,MAAAA,KAAK,EAACA,KADA;AAGNG,MAAAA,KAAK,EAAE,CAHD;AAKNC,MAAAA,OAAO,EAAE;AALH,KAFkB;;AAAA,SAU1BC,UAV0B,GAUd,MAAI;AACd,WAAKC,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAC,KAAKF,KAAL,CAAWE,OAAX,GAAmB;AADf,OAAd;AAGD,KAdyB;;AAAA,SAgB5BG,aAhB4B,GAgBXC,EAAD,IAAQ;AAEtB,UAAIC,YAAY,GAAG,KAAKP,KAAL,CAAWE,OAA9B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,EAAnC,EAHsB,CAKlB;;AACF,UAAGC,YAAY,CAACG,OAAb,CAAqBJ,EAArB,IAA2B,CAAC,CAA/B,EAAiC;AAE/B,aAAKF,QAAL,CAAc;AAEZG,UAAAA,YAAY,EAAG,EAFH;AAIZN,UAAAA,KAAK,EAAG;AAJI,SAAd;AAQAO,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKT,KAAL,CAAWC,KAA5C;AAED,OAZD,MAYO;AAEL,YAAIU,QAAQ,qBAAO,KAAKX,KAAZ,CAAZ;;AAEAW,QAAAA,QAAQ,CAACV,KAAT;AAEA,aAAKG,QAAL,CAAcO,QAAd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKT,KAAL,CAAWC,KAA1C;AAGD;AAEF,KA9CyB;AAAA;;AAgD1BW,EAAAA,MAAM,GAAE;AAEN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWF,KAAX,CAAiBe,GAAjB,CAAsBC,IAAI,IAAK,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAGA,IAAI,CAACR,EAAjB;AAAqB,MAAA,OAAO,EAAE,MAAI,KAAKD,aAAL,CAAmBS,IAAI,CAACR,EAAxB,CAAlC;AAA+D,MAAA,EAAE,EAAEQ,IAAI,CAACR,EAAxE;AAA4E,MAAA,KAAK,EAAEQ,IAAI,CAACC,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CADH,CADF;AAID;;AAtDyB;;AAwD5B,eAAehB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Card from './components/ColorCard';\nimport cards from \"./cards.json\";\n\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards:cards,\n\n    score: 0,\n\n    clicked: []\n  };\n\n  fakeClicks= ()=>{\n    this.setState({\n      clicked:this.state.clicked+1\n    })\n  }\n\nhandleOnClick = (id) => {\n\n  let clickedArray = this.state.clicked\n  console.log('inside click handle', id)\n\n      //if the id of image just clicked on is in the clicked array, minus one off of score and then empty clicked array\n    if(clickedArray.indexOf(id) > -1){\n\n      this.setState({\n\n        clickedArray : [],\n\n        score : 0\n        \n\n      })\n      console.log(\"Score is down one\", this.state.score)\n      \n    } else {\n\n      let newState = {...this.state};\n      \n      newState.score++;\n\n      this.setState(newState)\n      console.log(\"Score is up one\", this.state.score)\n\n      \n    }\n\n  };\n\n  render(){\n\n    return (\n      <div>\n        {this.state.cards.map( card =>  <Card key ={card.id} onClick={()=>this.handleOnClick(card.id)} id={card.id} image={card.image}/>)}\n    </div>)\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}